This file contains currently pursued TODOs and self-created tasks for the development of the library...; 

1. DIRECTIONS; 
	1. Finish: 
		1.1. NumberEquation; 	
			1.1.1. Write the default parsing procedure;
			1.1.2. Create the format for output code, write the basic plugging + evaluation procedure based off it; 
			1.1.3. Create analysis tools for the thing [IDEA: for the NumberEquation, return the 'NumericData' class instance, which will (in itself) possess a way of working with the number data in question];
		1.2. InfiniteNumber [prioritee N1]
		1.3. InfiniteString [prioritee N1]	
		1.4. BinomialHeap [priority N2]; 

	1.2. Implement: 
		1.2.1. sort.bucket() [priority N1]; 
		1.2.2. Real [prioritee N2] - make a very brisk sketch that only features the abstract '.'-dot-position + implementations of binary versions of elementary arithmetic operations; 
	
	1.3. Code polishing: 
		1.3.1. Undetermined yet, go around finishing small undone things and tasks - plenty of those yet... Start preparing the code for testing;
			1.3.1.1. This includes new ideas for things to add to the library (for instance, the BinaryArray - for binary arithmetic...); 
		1.3.2. Complete ALL the TEMPLATEs' defaults and use the 'refactor.defaults' for storing the repeating defaults and referencing them...; 
	
2. Side: Testing; 
	The library's approaching the v1.0 release; 
	Before it, one desires to first conduct proper (and not like the other times!) testing operations; 

	For this: 

		-1. Do the testing in small pieces of code, rapidly; 
		0. Before testing a particular method, pray first re-look through its code most carefully and think of the design decisions made in it (namely, whether one was satisfied with them insofar or not...); 
		1. Write extensive tests for each and every single thing; 
		2. Test; 
		3. Upon failure, rewrite and return to 2.; 
		4. Upon success, go on to the next piece of code (next method); 

	The entire process oughtn't take more than a few days of dedicated work...