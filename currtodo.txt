This file contains currently pursued short-term TODOs and self-created tasks for the development of the library...; 
	
1. Documentation [for v1.1., earlier - just a simple sketch...]: 	
	There are two versions - one for the 'GitHub Wiki' (after making the repository public again), another - the in-editor (it contains references to the full GitHub wiki docs + short introductory descriptions) kind. 
	NOTE: base the GitHub documentation on the tests, be thorough;

2. Extension of package domains: 

	Add the CommonJS modules, work the 'todos.txt' file, final bits of work. 
	After that is done, 'npm publish'!
	
	But first (minor things, simple to do...): 
		1. Proper Deno and TypeScript support (perhaps, add it, perhaps not); 

			For it to be possible without user having to do anything, one must provide the according type declarations under node16 (deno).
			ALSO (important) - check correctness of references (import path-strings), apparently, due to 'tsconfig.json', TypeScript and JS Node may look at them slightly differently...

			For this, the only truly needed thing are the proper 'JSDoc's. 
			NOTE: only use the 'object', 'any' (and, only occasionally, 'number', 'boolean', 'string' - in special cases, like defaultTable), all else is unneeded...; 

			
		IDEA: add various types to the package? (For TypeScript programs...)
			DIFFICULTY - these types don't align AT ALL with the results of the code (meaning, they're useless...);  

3. Possible Types Methods for future addition: 

	GeneralArray:
		copyWithin(beginind, endind, targetind) // like Array.copyWithin(), but 0th argument becomes 2nd and the 'endind' is inclusive; 
		reduce(initial, direction, callback) [like Array.reduce(), under question?] // 'direction' would correspond to 'the way' that this thing is working: generalized reduce/reduceRight
		entries() // same as Array.entries, but uses 'generator' for indexes; Note: doesn't 'loop' already do that?
	
	UnlimitedMap:
		entries() // akin to Object.entries()
		